<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsk.template.dao.TtestDao">
    <resultMap id="testWithSubs" type="com.zsk.template.model.Ttest">
        <id column="id" property="id"/>
        <result column="status" property="status"/>
        <collection property="ttestSubs" ofType="com.zsk.template.model.TtestSub">
            <id column="sub_id" property="id"/>
            <result column="sub_name" property="name"/>
            <result column="sub_ttest_id" property="ttestId"/>
        </collection>

    </resultMap>
    <select id="getTtestWithSubs" parameterType="java.lang.Integer" resultType="com.zsk.template.model.Ttest">
        select
            ttest.*,
            case when count(ttest_sub) = 0 then '[]' else json_agg(ttest_sub.*) end as subs
        from ttest
                 left join ttest_sub
                           on ttest.id = ttest_sub.ttest_id
        where ttest.id = #{id}
        group by ttest.id
    </select>

    <select id="getTtestWithSubs2" parameterType="java.lang.Integer" resultMap="testWithSubs">
        select
            ttest.id,ttest.status,
            ttest_sub.id as sub_id,
            ttest_sub.ttest_id as sub_ttest_id,
            ttest_sub.name as sub_name
        from ttest
                 left join ttest_sub
                           on ttest.id = ttest_sub.ttest_id
        where ttest.id = #{id}
    </select>
    
    <insert id="insert2">
        insert into ttest(
              <include refid="insertColumn"></include>
        )
        values 
        (#{status})
    </insert>

    <select id="selectByStats">
        select * from ttest
        <trim prefix="where" suffixOverrides="and">
            status = #{status} and
        </trim>
    </select>

    <select id="selectByIdOrStatus">
        select * from ttest
        <where>
            <choose>
                <when test="id != null">
                    and id = #{id}
                </when>
                <when test="status != null">
                    and status = #{status}
                </when>
                <otherwise>
                    1 = 1
                </otherwise>
            </choose>
        </where>
    </select>

    <update id="updateOne">
        update ttest
        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
    </update>

    
    <insert id="batchInsert">
        insert into public.ttest (id, status) values 
    <foreach collection="ttests" index="test" separator="," open="(" close=")">
        #{test.id},#{test.status}
    </foreach>
    </insert>
    <sql id="insertColumn">
        status
    </sql>


</mapper>
